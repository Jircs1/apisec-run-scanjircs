# action.yml
name: 'APIsec Scan'
description: 'Continuous, automated, comprehensive API Security Testing'
inputs:
  apisec-username:
    description: 'The APIsec username with which the scans will be executed'
    required: true
    default: ''
  apisec-password:
    description: 'The Password of the APIsec user with which the scans will be executed'
    required: true
    default: '' 
  apisec-project:
    description: 'The Name of the project for security scan'
    required: true
    default: ''
  apisec-profile:  
    description: 'The Name of the scan profile to be executed'
    required: false
    default: 'Master'
  apisec-region:  
    description: 'The location the scan will be executed in'
    required: false
    default: ''
  sarif-result-file:  
    description: 'The path to the sarif format result file'
    required: false
    default: ''
  apisec-email-report:
    description: 'To trigger scan email reports, set this value as "true" or else "false"'
    required: false
    default: ''
  apisec-fail-on-vuln-severity: 
    description: 'Pass the severity string for which pipeline execution breaks upon finding that severity vulnerability. Possible string values are Critical, High and Medium severity. By default its an empty string "".'
    required: false
    default: ''     
  apisec-openapi-spec-url: 
    description: 'OpenAPI Spec Url for registering a project'
    required: false
    default: ''    
  apisec-refresh-playbooks:
    description: 'To regenerate/refresh the playbooks of a project, set this value as "true" or else "false"'
    required: false
    default: ''       

runs:
  using: "composite"
  steps:  
    - run:  ${GITHUB_ACTION_PATH}/apisec-run-scan.sh --username "${{inputs.apisec-username}}" --password "${{ inputs.apisec-password }}" --project "${{ inputs.apisec-project }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}"  --outputfile  "${{ inputs.sarif-result-file }}"   --refresh-playbooks "${{ inputs.apisec-refresh-playbooks }}" --host "${{ inputs.apisec-hostname }}" --emailReport "${{ inputs.apisec-email-report }}" --fail-on-vuln-severity "${{ inputs.apisec-fail-on-vuln-severity }}" --openAPISpecUrl "${{ inputs.apisec-openapi-spec-url }}" --openAPISpecFile "${{ inputs.apisec-openapi-spec-file }}" --internal_OpenAPISpecUrl  "${{ inputs.apisec-internal-openapi-spec-url }}" --specType  "${{ inputs.apisec-internal-spec-type }}" --profileScanner  "${{ inputs.apisec-profile-scanner }}" --envName "${{ inputs.apisec-envName }}" --authName "${{ inputs.apisec-authName }}" --app_username "${{ inputs.app_username }}" --app_password "${{ inputs.app_password }}" --app_endPointUrl "${{ inputs.app-endPointUrl }}" --app_token_param "${{ inputs.app-token-param }}" --header_1 "${{ inputs.apisec-header_1 }}" --baseUrl "${{ inputs.apisec-baseUrl }}" --category "${{ inputs.apisec-category }}"
   # - run:  ${GITHUB_ACTION_PATH}/apisec-run-scan.sh "${{inputs.apisec-username}}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-project }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" 
      shell: bash

















# action.yml
# name: 'APIsec Scan'
# description: 'Continuous, automated, comprehensive API Security Testing'
# inputs:
#   apisec-username:
#     description: 'The APIsec username with which the scans will be executed'
#     required: true
#     default: ''
#   apisec-password:
#     description: 'The Password of the APIsec user with which the scans will be executed'
#     required: true
#     default: '' 
#   apisec-project:
#     description: 'The Name of the project for security scan'
#     required: true
#     default: ''
#   apisec-profile:  
#     description: 'The Name of the scan profile to be executed'
#     required: false
#     default: 'Master'
#   apisec-region:  
#     description: 'The location the scan will be executed in'
#     required: false
#     default: ''
#   sarif-result-file:  
#     description: 'The path to the sarif format result file'
#     required: false
#     default: ''
 
# runs:
#   using: "composite"
#   steps:
#     - run:  ${GITHUB_ACTION_PATH}/apisec-run-scan.sh "${{inputs.apisec-username}}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-project }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" 
#       shell: bash
